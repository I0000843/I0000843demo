{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DFtrigCheck"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Pipe_line_Load_mult_tables_data_to_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipe_line_Load_mult_tables_data_to_Files",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Hello",
								"value": "Hello"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from information_Schema.tables where table_type='BASE TABLE'",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "AzureDB",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Hi",
											"value": "@{item().Table_Schema}.@{item().Table_Name}"
										},
										{
											"name": "Hello",
											"value": "containermultiple//@{concat(item().Table_Schema,'_',item().Table_Name,'.CSV')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQLTables",
											"type": "DatasetReference",
											"parameters": {
												"Table_Name": {
													"value": "@item().Table_Name",
													"type": "Expression"
												},
												"Schema_Name": {
													"value": "@item().Table_Schema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "tgt_testg_csv",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().Table_Schema,'_',item().Table_Name,'.CSV')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tgt_testg_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Data_Migration_blob_to_Cosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline_Data_Migration_blob_to_Cosmos",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "src",
								"value": "blob"
							},
							{
								"name": "target",
								"value": "cosmos"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "unspsc codes_3.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Segment",
											"type": "String"
										},
										"sink": {
											"path": "$['Segment']"
										}
									},
									{
										"source": {
											"name": "Segment Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Segment Name']"
										}
									},
									{
										"source": {
											"name": "Family",
											"type": "String"
										},
										"sink": {
											"path": "$['Family']"
										}
									},
									{
										"source": {
											"name": "Family Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Family Name']"
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "String"
										},
										"sink": {
											"path": "$['Class']"
										}
									},
									{
										"source": {
											"name": "Class Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Class Name']"
										}
									},
									{
										"source": {
											"name": "Commodity",
											"type": "String"
										},
										"sink": {
											"path": "$['Commodity']"
										}
									},
									{
										"source": {
											"name": "Commodity Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Commodity Name']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "src_blob_storage",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbSqlApiCollection1",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/src_blob_storage')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbSqlApiCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Filevailable'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "inp",
											"type": "DatasetReference"
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "activity('Get Metadata1').output.exists",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Copy_Data",
												"activities": [
													{
														"name": "Copy data1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "BinarySource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": false
																},
																"formatSettings": {
																	"type": "BinaryReadSettings"
																}
															},
															"sink": {
																"type": "BinarySink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																}
															},
															"enableStaging": false,
															"skipErrorFile": {
																"fileMissing": true
															},
															"validateDataConsistency": false
														},
														"inputs": [
															{
																"referenceName": "inp",
																"type": "DatasetReference"
															}
														],
														"outputs": [
															{
																"referenceName": "opt",
																"type": "DatasetReference"
															}
														]
													}
												]
											},
											{
												"value": "wait for file",
												"activities": [
													{
														"name": "Wait1",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 60
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"variables": {
					"Filevailable": {
						"type": "String",
						"defaultValue": "false"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApiCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"typeProperties": {
					"collectionName": "items"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_blob_storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "containeri0000843src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgt_testg_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "containermultiple"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "https://azdatalakestorei0000843.azuredatalakestore.net/webhdfs/v1",
					"tenant": "144e4b5f-7e14-4ffc-8f4d-42dc7c398b75",
					"subscriptionId": "44b49070-e92e-4b8d-bed3-46b55b968c80",
					"resourceGroupName": "RG_Demo"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://kv-dev-testing.vault.azure.net/"
				}
			},
			"dependsOn": []
		}
	]
}